name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    name: Create github release
    runs-on: ubuntu-latest
    steps:
    - name: Create Github release draft
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        draft: true
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}

    - name: Save release upload for later use
      shell: bash
      run: |
        mkdir artifacts
        echo "${{ steps.create_release.outputs.upload_url }}" > artifacts/release-upload-url
        echo "${{ steps.create_release.outputs.id }}" > artifacts/release-id

    - name: Upload release upload url
      uses: actions/upload-artifact@v1
      with:
        name: artifacts
        path: artifacts

  build:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [
            linux
        ]

        include:
          - name: linux
            os: ubuntu-latest
            asset_path: target/release/simprox
            asset_name: simprox-linux-amd64

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Setup rust toolchain cache
      uses: Swatinem/rust-cache@v1

    - name: Build
      run: cargo build --release --locked
  
    - name: Strip release binary (linux and macos)
      if: matrix.name == 'linux' || matrix.name == 'macos'
      run: strip "target/release/simprox"

    - name: Download file with release upload url info
      uses: actions/download-artifact@v1
      with:
        name: artifacts
        path: artifacts

    - name: Save upload url in ENV
      shell: bash
      run: |
        echo "RELEASE_UPLOAD_URL=$(cat artifacts/release-upload-url)" >> $GITHUB_ENV
        echo $RELEASE_UPLOAD_URL

    - name: Upload release asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.RELEASE_UPLOAD_URL }}
        asset_path: ${{ matrix.asset_path }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: application/x-executable

  publish:
    name: Publish github release
    runs-on: ubuntu-latest
    steps:
    - name: Download file with release id info
      uses: actions/download-artifact@v1
      with:
        name: artifacts
        path: artifacts

    - name: Save release id in ENV
      shell: bash
      run: |
        echo "RELEASE_ID=$(cat artifacts/release-id)" >> $GITHUB_ENV
        echo $RELEASE_ID

    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ env.RELEASE_ID }}
